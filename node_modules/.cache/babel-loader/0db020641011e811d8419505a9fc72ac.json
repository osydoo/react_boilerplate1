{"ast":null,"code":"import _defineProperty from \"/home/dongwoo/task/boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/dongwoo/task/boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dongwoo/task/boilerplate/src/pages/BasicPage.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useLoading } from '../hooks';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { getDefault } from '../reducers/rootReducer';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(3, 2),\n    margin: theme.spacing(3)\n  },\n  appbar: {\n    flexGrow: 1,\n    backgroundColor: '#000000'\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function Root() {\n  const classes = useStyles();\n\n  const _useLoading = useLoading(),\n        _useLoading2 = _slicedToArray(_useLoading, 3),\n        loadState = _useLoading2[0].loadState,\n        setLoadState = _useLoading2[1],\n        dispatch = _useLoading2[2];\n\n  const handleChange = e => {\n    setLoadState(_objectSpread({}, loadState, {\n      [e.target.name]: [e.target.value]\n    }));\n  };\n\n  const handleClick = async () => {\n    await dispatch(getDefault(loadState));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"sticky\",\n    className: classes.appbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"BoilerPlate\"))), React.createElement(TextField, {\n    label: \"\\uC544\\uBB34\\uAC70\\uB098 \\uC785\\uB825\",\n    name: \"text\",\n    onChange: handleChange,\n    value: loadState.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"\\uD074\\uB9AD!\"));\n}","map":{"version":3,"sources":["/home/dongwoo/task/boilerplate/src/pages/BasicPage.jsx"],"names":["React","useLoading","Button","useDispatch","makeStyles","AppBar","Toolbar","Typography","TextField","getDefault","useStyles","theme","paper","padding","spacing","margin","appbar","flexGrow","backgroundColor","title","Root","classes","loadState","setLoadState","dispatch","handleChange","e","target","name","value","handleClick","text"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADN;AAEHC,IAAAA,MAAM,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFL,GAD4B;AAKnCE,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,CADJ;AAENC,IAAAA,eAAe,EAAE;AAFX,GAL2B;AASnCC,EAAAA,KAAK,EAAE;AACLF,IAAAA,QAAQ,EAAE;AADL;AAT4B,CAAL,CAAN,CAA5B;AAcA,eAAe,SAASG,IAAT,GAAgB;AAC3B,QAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAD2B,sBAEmBT,UAAU,EAF7B;AAAA;AAAA,QAEnBqB,SAFmB,mBAEnBA,SAFmB;AAAA,QAEPC,YAFO;AAAA,QAEOC,QAFP;;AAG3B,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBH,IAAAA,YAAY,mBACLD,SADK;AAER,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkB,CAACF,CAAC,CAACC,MAAF,CAASE,KAAV;AAFV,OAAZ;AAIH,GALD;;AAMA,QAAMC,WAAW,GAAG,YAAY;AAC5B,UAAMN,QAAQ,CAACf,UAAU,CAACa,SAAD,CAAX,CAAd;AACH,GAFD;;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA2B,IAAA,SAAS,EAAED,OAAO,CAACL,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEK,OAAO,CAACF,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CADJ,EAQI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAC,uCADN;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,QAAQ,EAAEM,YAHV;AAIA,IAAA,KAAK,EAAEH,SAAS,CAACS,IAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAcI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdJ,CADJ;AAoBH","sourcesContent":["import React from 'react';\nimport { useLoading } from '../hooks'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { getDefault } from '../reducers/rootReducer';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3, 2),\n        margin: theme.spacing(3)\n    },\n    appbar: {\n      flexGrow: 1,\n      backgroundColor: '#000000'\n    },\n    title: {\n      flexGrow: 1,\n    }\n  }));\n\nexport default function Root() {\n    const classes = useStyles();\n    const [{loadState}, setLoadState, dispatch] = useLoading();\n    const handleChange = e => {\n        setLoadState({\n            ...loadState,\n            [e.target.name] : [e.target.value]\n        });\n    }\n    const handleClick = async () => {\n        await dispatch(getDefault(loadState));\n    }\n    return (\n        <div>\n            <AppBar position=\"sticky\"  className={classes.appbar}>\n                <Toolbar >\n                    <Typography variant=\"h6\" className={classes.title}>\n                        BoilerPlate\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <TextField\n            label=\"아무거나 입력\"\n            name=\"text\"\n            onChange={handleChange}\n            value={loadState.text}\n            />\n            <Button onClick={handleClick}>\n                클릭!\n            </Button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}