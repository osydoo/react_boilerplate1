{"ast":null,"code":"import _defineProperty from \"/home/dongwoo/task/boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/dongwoo/task/boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nexport const useLoading = () => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => state.Login),\n        isLoading = _useSelector.isLoading,\n        isError = _useSelector.isError,\n        data = _useSelector.data;\n\n  const _useState = useState({\n    open: false,\n    text: '로딩 중...'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadState = _useState2[0],\n        setLoadState = _useState2[1]; // 메시지 상태메시지\n\n\n  useEffect(() => {\n    // 로딩 중, 에러 발생 메시지 저장 및 대화창 오픈\n    if (isLoading) {\n      setLoadState(_objectSpread({}, loadState, {\n        open: true\n      }));\n    } else if (isError) {\n      setLoadState(_objectSpread({}, loadState, {\n        open: false\n      })); // 임시 아니면 편집불가false -> true변경필요 : 수정\n    } else {\n      setLoadState(_objectSpread({}, loadState, {\n        open: false\n      }));\n    }\n  }, [isError, isLoading]);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (stateDuedate === null) {\n        dispatch(setMarket(_objectSpread({}, stateMarket, {\n          delivery: _objectSpread({}, stateMarket.delivery, {\n            dueDate: 0,\n            startDueDate: 0\n          }),\n          cashReceipt\n        })));\n      } else {\n        dispatch(setMarket(_objectSpread({}, stateMarket, {\n          delivery: _objectSpread({}, stateMarket.delivery, {\n            dueDate: stateDuedate,\n            startDate: stateStartdate\n          }),\n          cashReceipt\n        })));\n      }\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [MarketCover, cashReceipt, delay, dispatch, stateDuedate, stateMarket, stateStartdate]);\n  return [{\n    loadState\n  }, setLoadState, dispatch];\n};","map":{"version":3,"sources":["/home/dongwoo/task/boilerplate/src/hooks/useDefault.js"],"names":["useEffect","useState","useSelector","useDispatch","useLoading","dispatch","state","Login","isLoading","isError","data","open","text","loadState","setLoadState","handler","setTimeout","stateDuedate","setMarket","stateMarket","delivery","dueDate","startDueDate","cashReceipt","startDate","stateStartdate","delay","clearTimeout","MarketCover"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,MAAMC,UAAU,GAAC,MAAI;AAC1B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAD0B,uBAEWD,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAFtB;AAAA,QAElBC,SAFkB,gBAElBA,SAFkB;AAAA,QAEPC,OAFO,gBAEPA,OAFO;AAAA,QAEEC,IAFF,gBAEEA,IAFF;;AAAA,oBAGQT,QAAQ,CAAC;AACzCU,IAAAA,IAAI,EAAG,KADkC;AAEzCC,IAAAA,IAAI,EAAE;AAFmC,GAAD,CAHhB;AAAA;AAAA,QAGnBC,SAHmB;AAAA,QAGRC,YAHQ,kBAMtB;;;AAEJd,EAAAA,SAAS,CAAC,MAAI;AAAE;AACd,QAAGQ,SAAH,EAAa;AACXM,MAAAA,YAAY,mBAAKD,SAAL;AAAgBF,QAAAA,IAAI,EAAE;AAAtB,SAAZ;AACD,KAFD,MAEM,IAAGF,OAAH,EAAW;AACfK,MAAAA,YAAY,mBAAKD,SAAL;AAAgBF,QAAAA,IAAI,EAAE;AAAtB,SAAZ,CADe,CAC4B;AAC5C,KAFK,MAED;AACHG,MAAAA,YAAY,mBAAKD,SAAL;AAAgBF,QAAAA,IAAI,EAAE;AAAtB,SAAZ;AACD;AACF,GARQ,EAQN,CAACF,OAAD,EAAUD,SAAV,CARM,CAAT;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/B,UAAIC,YAAY,KAAK,IAArB,EAA2B;AACzBZ,QAAAA,QAAQ,CACNa,SAAS,mBACJC,WADI;AAEPC,UAAAA,QAAQ,oBACHD,WAAW,CAACC,QADT;AAENC,YAAAA,OAAO,EAAE,CAFH;AAGNC,YAAAA,YAAY,EAAE;AAHR,YAFD;AAOPC,UAAAA;AAPO,WADH,CAAR;AAWD,OAZD,MAYO;AACLlB,QAAAA,QAAQ,CACNa,SAAS,mBACJC,WADI;AAEPC,UAAAA,QAAQ,oBACHD,WAAW,CAACC,QADT;AAENC,YAAAA,OAAO,EAAEJ,YAFH;AAGNO,YAAAA,SAAS,EAAEC;AAHL,YAFD;AAOPF,UAAAA;AAPO,WADH,CAAR;AAWD;AACF,KA1ByB,EA0BvBG,KA1BuB,CAA1B;AA2BA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACZ,OAAD,CAAZ;AACD,KAFD;AAGD,GA/BQ,EA+BN,CAACa,WAAD,EAAcL,WAAd,EAA2BG,KAA3B,EAAkCrB,QAAlC,EAA4CY,YAA5C,EAA0DE,WAA1D,EAAuEM,cAAvE,CA/BM,CAAT;AAiCA,SAAO,CAAC;AAACZ,IAAAA;AAAD,GAAD,EAAcC,YAAd,EAA4BT,QAA5B,CAAP;AACD,CApDM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport const useLoading=()=>{\n  const dispatch = useDispatch();\n  const { isLoading, isError, data } = useSelector(state => state.Login);\n  const [loadState, setLoadState] = useState({\n    open : false,\n    text: '로딩 중...'\n  }); // 메시지 상태메시지\n\n  useEffect(()=>{ // 로딩 중, 에러 발생 메시지 저장 및 대화창 오픈\n    if(isLoading){\n      setLoadState({...loadState, open: true});\n    }else if(isError){\n      setLoadState({...loadState, open: false}); // 임시 아니면 편집불가false -> true변경필요 : 수정\n    }else{\n      setLoadState({...loadState, open: false});\n    }\n  }, [isError, isLoading]);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (stateDuedate === null) {\n        dispatch(\n          setMarket({\n            ...stateMarket,\n            delivery: {\n              ...stateMarket.delivery,\n              dueDate: 0,\n              startDueDate: 0\n            },\n            cashReceipt,\n          }),\n        );\n      } else {\n        dispatch(\n          setMarket({\n            ...stateMarket,\n            delivery: {\n              ...stateMarket.delivery,\n              dueDate: stateDuedate,\n              startDate: stateStartdate\n            },\n            cashReceipt,\n          }),\n        );\n      }\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [MarketCover, cashReceipt, delay, dispatch, stateDuedate, stateMarket, stateStartdate]);\n\n  return [{loadState}, setLoadState, dispatch];\n}\n"]},"metadata":{},"sourceType":"module"}