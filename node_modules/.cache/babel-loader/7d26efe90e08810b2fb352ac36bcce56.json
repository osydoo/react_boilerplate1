{"ast":null,"code":"import _slicedToArray from \"/home/dongwoo/task/boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dongwoo/task/boilerplate/src/pages/BasicPage.jsx\";\nimport React, { useEffect } from 'react';\nimport { useLoading } from '../hooks';\nimport { Button, Input } from '../components';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(3, 2),\n    margin: theme.spacing(3)\n  },\n  appbar: {\n    flexGrow: 1,\n    backgroundColor: '#efefef '\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  lettertitle: {\n    marginTop: 12,\n    padding: 6\n  }\n}));\nexport default function Root() {\n  const classes = useStyles();\n\n  const _useLoading = useLoading(),\n        _useLoading2 = _slicedToArray(_useLoading, 3),\n        loadState = _useLoading2[0].loadState,\n        setLoadState = _useLoading2[1],\n        dispatch = _useLoading2[2];\n\n  const handleChange = e => {};\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"sticky\",\n    className: classes.appbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"BoilerPlate\"))), React.createElement(TextField, {\n    label: \"ThemeProvider\",\n    name: \"text\",\n    onChange: handleChange,\n    value: loadState.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/dongwoo/task/boilerplate/src/pages/BasicPage.jsx"],"names":["React","useEffect","useLoading","Button","Input","useDispatch","makeStyles","AppBar","Toolbar","Typography","TextField","useStyles","theme","paper","padding","spacing","margin","appbar","flexGrow","backgroundColor","menuButton","marginRight","title","lettertitle","marginTop","Root","classes","loadState","setLoadState","dispatch","handleChange","e","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADN;AAEHC,IAAAA,MAAM,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFL,GAD4B;AAKnCE,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,CADJ;AAENC,IAAAA,eAAe,EAAE;AAFX,GAL2B;AASnCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAET,KAAK,CAACG,OAAN,CAAc,CAAd;AADH,GATuB;AAYnCO,EAAAA,KAAK,EAAE;AACLJ,IAAAA,QAAQ,EAAE;AADL,GAZ4B;AAenCK,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE,EADF;AAETV,IAAAA,OAAO,EAAE;AAFA;AAfsB,CAAL,CAAN,CAA5B;AAqBA,eAAe,SAASW,IAAT,GAAgB;AAC3B,QAAMC,OAAO,GAAGf,SAAS,EAAzB;;AAD2B,sBAEmBT,UAAU,EAF7B;AAAA;AAAA,QAEnByB,SAFmB,mBAEnBA,SAFmB;AAAA,QAEPC,YAFO;AAAA,QAEOC,QAFP;;AAG3B,QAAMC,YAAY,GAAGC,CAAC,IAAI,CAEzB,CAFD;;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA2B,IAAA,SAAS,EAAEL,OAAO,CAACT,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAES,OAAO,CAACJ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CADJ,EAQI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAC,eADN;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,QAAQ,EAAEQ,YAHV;AAIA,IAAA,KAAK,EAAEH,SAAS,CAACK,IAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAkBH","sourcesContent":["import React, { useEffect } from 'react';\nimport { useLoading } from '../hooks'\nimport { Button, Input } from '../components'\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3, 2),\n        margin: theme.spacing(3)\n    },\n    appbar: {\n      flexGrow: 1,\n      backgroundColor: '#efefef '\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    lettertitle: {\n        marginTop: 12,\n        padding: 6\n    }\n  }));\n\nexport default function Root() {\n    const classes = useStyles();\n    const [{loadState}, setLoadState, dispatch] = useLoading();\n    const handleChange = e => {\n\n    }\n    return (\n        <div>\n            <AppBar position=\"sticky\"  className={classes.appbar}>\n                <Toolbar >\n                    <Typography variant=\"h6\" className={classes.title}>\n                        BoilerPlate\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <TextField\n            label=\"ThemeProvider\"\n            name=\"text\"\n            onChange={handleChange}\n            value={loadState.text}\n            />\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}