{"ast":null,"code":"import { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { getDefault, getDefaultSuccess, getDefaultFail } from '../reducers/rootReducer';\n\nfunction* setDefaultLoad(action) {\n  try {\n    const data = action.payload;\n    Promise.all(setTimeout(async () => {\n      await put(getDefaultSuccess(data));\n    }, 1000));\n  } catch (error) {\n    console.log(error);\n    yield put(getDefaultFail());\n  }\n}\n\nfunction* watchSetDefaultLoad() {\n  yield takeLatest(getDefault, setDefaultLoad);\n}\n\nexport default function* defaultSaga() {\n  yield all([fork(watchSetDefaultLoad)]);\n}","map":{"version":3,"sources":["/home/dongwoo/task/boilerplate/src/sagas/defaultSaga.js"],"names":["all","fork","takeLatest","call","put","getDefault","getDefaultSuccess","getDefaultFail","setDefaultLoad","action","data","payload","Promise","setTimeout","error","console","log","watchSetDefaultLoad","defaultSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SACEC,UADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,yBAJP;;AAMA,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AAC/B,MAAI;AACF,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACAC,IAAAA,OAAO,CAACZ,GAAR,CAAYa,UAAU,CAAC,YAAU;AAC/B,YAAMT,GAAG,CAACE,iBAAiB,CAACI,IAAD,CAAlB,CAAT;AACD,KAFqB,EAEnB,IAFmB,CAAtB;AAGD,GALD,CAKE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMV,GAAG,CAACG,cAAc,EAAf,CAAT;AACD;AACF;;AAED,UAAUU,mBAAV,GAAgC;AAC9B,QAAMf,UAAU,CAACG,UAAD,EAAaG,cAAb,CAAhB;AACD;;AAED,eAAe,UAAUU,WAAV,GAAwB;AACnC,QAAMlB,GAAG,CAAC,CACRC,IAAI,CAACgB,mBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport {   \n  getDefault,\n  getDefaultSuccess,\n  getDefaultFail\n} from '../reducers/rootReducer';\n\nfunction* setDefaultLoad(action) {\n  try {\n    const data = action.payload;\n    Promise.all(setTimeout(async ()=>{\n      await put(getDefaultSuccess(data));\n    }, 1000));\n  } catch (error) {\n    console.log(error);\n    yield put(getDefaultFail());\n  }\n}\n\nfunction* watchSetDefaultLoad() {\n  yield takeLatest(getDefault, setDefaultLoad);\n}\n\nexport default function* defaultSaga() {\n    yield all([\n      fork(watchSetDefaultLoad),\n    ]);\n  }"]},"metadata":{},"sourceType":"module"}